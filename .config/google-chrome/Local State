{
   "browser": {
      "last_redirect_origin": ""
   },
   "gl_renderer_string": "Mesa DRI Intel(R) Ivybridge Mobile ",
   "gl_vendor_string": "Intel Open Source Technology Center",
   "gl_version_string": "3.0 Mesa 10.0.0",
   "hardware_acceleration_mode_previous": true,
   "http_original_content_length": "40621335",
   "http_received_content_length": "40621335",
   "local_state": {
      "multiple_profile_prefs_version": 7
   },
   "ntp": {
      "promo_resource_cache_update": "1395628511.522757"
   },
   "plugins": {
      "metadata": {
         "adobe-flash-player": {
            "displayurl": true,
            "group_name_matcher": "*Shockwave Flash*",
            "help_url": "https://support.google.com/chrome/?p=plugin_flash",
            "lang": "en-US",
            "matching_mime_types": [ "application/futuresplash" ],
            "mime_types": [ "application/futuresplash", "application/x-shockwave-flash" ],
            "name": "Adobe Flash Player",
            "url": "http://get.adobe.com/flashplayer/",
            "versions": [ {
               "reference": "http://www.adobe.com/support/security/bulletins/apsb12-03.html",
               "status": "up_to_date",
               "version": "11.1.102"
            } ]
         },
         "google-chrome-pdf": {
            "group_name_matcher": "*Chrome PDF Viewer*",
            "mime_types": [  ],
            "name": "Chrome PDF Viewer",
            "versions": [ {
               "comment": "Google Chrome PDF has no version information.",
               "status": "up_to_date",
               "version": "0"
            } ]
         },
         "google-talk": {
            "group_name_matcher": "*Google Talk*",
            "mime_types": [  ],
            "name": "Google Talk",
            "versions": [ {
               "comment": "'Google Talk Plugin' and 'Google Talk Plugin Video Accelerator' use two completely different versioning schemes, so we can't define a minimum version.",
               "status": "up_to_date",
               "version": "0"
            } ]
         },
         "java-runtime-environment": {
            "displayurl": true,
            "group_name_matcher": "Java*",
            "help_url": "https://support.google.com/chrome/?p=plugin_java",
            "lang": "en-US",
            "mime_types": [ "application/x-java-applet", "application/x-java-applet,version=1.1", "application/x-java-applet,version=1.1.1", "application/x-java-applet,version=1.1.2", "application/x-java-applet,version=1.1.3", "application/x-java-applet,version=1.2", "application/x-java-applet,version=1.2.1", "application/x-java-applet,version=1.2.2", "application/x-java-applet,version=1.3", "application/x-java-applet,version=1.3.1", "application/x-java-applet,version=1.4", "application/x-java-applet,version=1.4.1", "application/x-java-applet,version=1.4.2", "application/x-java-applet,version=1.5", "application/x-java-applet,version=1.6", "application/x-java-applet,version=1.7", "application/x-java-bean", "application/x-java-bean,version=1.1", "application/x-java-bean,version=1.1.1", "application/x-java-bean,version=1.1.2", "application/x-java-bean,version=1.1.3", "application/x-java-bean,version=1.2", "application/x-java-bean,version=1.2.1", "application/x-java-bean,version=1.2.2", "application/x-java-bean,version=1.3", "application/x-java-bean,version=1.3.1", "application/x-java-bean,version=1.4", "application/x-java-bean,version=1.4.1", "application/x-java-bean,version=1.4.2", "application/x-java-bean,version=1.5", "application/x-java-bean,version=1.6", "application/x-java-bean,version=1.7", "application/x-java-vm" ],
            "name": "Java(TM)",
            "url": "http://java.com/download",
            "versions": [ {
               "status": "requires_authorization",
               "version": "1.6.0.39"
            }, {
               "status": "out_of_date",
               "version": "1.7"
            }, {
               "status": "requires_authorization",
               "version": "1.7.0.13"
            } ]
         },
         "lightspark": {
            "displayurl": true,
            "group_name_matcher": "*Shockwave Flash*",
            "lang": "en-US",
            "matching_mime_types": [ "application/x-lightspark" ],
            "mime_types": [ "application/x-lightspark" ],
            "name": "Lightspark",
            "url": "https://launchpad.net/lightspark",
            "versions": [ {
               "status": "requires_authorization",
               "version": "0"
            } ]
         }
      },
      "resource_cache_update": "1395583844.485812"
   },
   "policy": {
      "last_statistics_update": "13040057384471675"
   },
   "profile": {
      "info_cache": {
         "Default": {
            "avatar_icon": "chrome://theme/IDR_PROFILE_AVATAR_0",
            "background_apps": false,
            "is_ephemeral": false,
            "managed_user_id": "",
            "name": "First user",
            "user_name": ""
         }
      },
      "last_active_profiles": [  ],
      "last_used": "Default"
   },
   "show-first-run-bubble-option": 0,
   "shutdown": {
      "num_processes": 0,
      "num_processes_slow": 0,
      "type": 0
   },
   "uninstall_metrics": {
      "installation_date2": "1393139933",
      "launch_count": "12"
   },
   "user_experience_metrics": {
      "low_entropy_source": 4888,
      "session_id": 11,
      "stability": {
         "breakpad_registration_fail": 8,
         "breakpad_registration_ok": 0,
         "crash_count": 1,
         "debugger_not_present": 8,
         "debugger_present": 0,
         "execution_phase": 700,
         "exited_cleanly": true,
         "incomplete_session_end_count": 0,
         "last_timestamp_sec": "1395629436",
         "launch_count": 8,
         "launch_time_sec": "1395629287",
         "page_load_count": 0,
         "plugin_stats2": [ {
            "crashes": 0,
            "instances": 0,
            "launches": 2,
            "loading_errors": 0,
            "name": "Shockwave Flash"
         } ],
         "renderer_crash_count": 0,
         "renderer_hang_count": 0,
         "session_end_completed": true,
         "stats_buildtime": "1394745589",
         "stats_version": "33.0.1750.152-64"
      }
   },
   "variations_last_fetch_time": "13040102887593543",
   "variations_seed": "",
   "variations_seed_date": "13040102887000000",
   "variations_seed_hash": "614907FC31DAA11B018081509F81DE833296D1C9",
   "was": {
      "restarted": false
   }
}
